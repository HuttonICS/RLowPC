% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/firstPCor.R
\name{firstPCor}
\alias{firstPCor}
\title{First order partial correlation}
\usage{
firstPCor(adjmatrix, data.exp, method = "pearson", p.quant.prob = 1,
  progressbar = T)
}
\arguments{
\item{adjmatrix}{an adjacency matrix with 0 and 1 numerical values to indicate edge connections.}

\item{data.exp}{gene expression data matrix with variables in columns and samples in rows.}

\item{method}{estimators of correlation. Options are "pearson" and "spearman"}

\item{p.quant.prob}{distribution probability of p-value quantile cut-off. It is used to determine which p-value of all the range of p-values for a pair of nodes is selected to determine
the edge correlation.}

\item{progressbar}{logical. If TRUE, a progressbar will show to indicate the code runing percentage.}
}
\value{
A list includes 3 \code{dataframe} of results. \code{cor} is the results of first order PC assigned to the input adjacency matrix. \code{pval} is the
p-value results and \code{adj} is the input adjacency matrix.
}
\description{
First order PC is calcuated according to the edge connections in the input adjacency matrix. The adjacency matrix can be a fully connected network (e.g. correlation matrix)
or a sparse network (e.g. correlation matrix after applying a edge cut-off). The correlation and p-value of a pair of nodes are measurd as (1) if they have
shared neighbours, a set of first order PC values and their p-values are calculated by removing the neighbours one by one. Edge correlation is deterimed by the
\code{quantile(p.values, probs=p.quant.prob)} p-value and the corresponding PC value. Setting \code{probs=1} indicates the maximum p-value will be selected as the significance metric.
(2) if they do not connect to the same nodes, the connection and p-value are calculated from the zero order PC (the general correlation).
}
\examples{
 library(RLowPCor)
 ## load DREAM4 data
 data(gnwdata)
 data.exp<-gnwdata$size100$ts1[,-c(1:2)]
 genes<-colnames(data.exp)
 ref.edge<-gnwdata$size100$net1
 ref.adj<-edgelist2adjmatrix(ref.edge,genes)
 ## infer correlation network
 inf.cor<-abs(cor(data.exp))
 diag(inf.cor)<-0
 ##  infer shrink partial correlation network
 inf.pcor<-abs(pcor.shrink(data.exp))[1:ncol(data.exp),1:ncol(data.exp)]
 diag(inf.pcor)<-0
 adjmatrix<-inf.cor
 adjmatrix[adjmatrix<0.2]<-0
 ## infer first order partial correlation network
 inf.firstpcor<-abs(firstPCor(adjmatrix = adjmatrix,data.exp)$cor)
 ##  infer second order partial correlation network
 inf.firstpcor<-abs(secondPCor(adjmatrix = adjmatrix,data.exp)$cor)

 table.firstpcor<-table.evaluate(inf.firstpcor,ref.adj)
 table.secondpcor<-table.evaluate(inf.secondpcor,ref.adj)
 table.cor<-table.evaluate(inf.cor,ref.adj)
 table.pcor<-table.evaluate(inf.pcor,ref.adj)
 X11()
 plotAUC(list(cor=table.cor,firstpcor=table.firstpcor,secondpcor=table.secondpcor,shrink.pcor=table.pcor),lwd=2)

}

